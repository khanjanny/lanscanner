#pragma checksum "/root/nk/Github/lanscanner/exploits/Covenant/Covenant/Components/CovenantUsers/CovenantUserTable.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "110cab9f89cdc1ba5fbb939b6805f1037cac7218"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace Covenant.Components.CovenantUsers
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
#nullable restore
#line 1 "/root/nk/Github/lanscanner/exploits/Covenant/Covenant/Components/_Imports.razor"
using Microsoft.AspNetCore.Components;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/root/nk/Github/lanscanner/exploits/Covenant/Covenant/Components/_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "/root/nk/Github/lanscanner/exploits/Covenant/Covenant/Components/_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "/root/nk/Github/lanscanner/exploits/Covenant/Covenant/Components/_Imports.razor"
using Covenant.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "/root/nk/Github/lanscanner/exploits/Covenant/Covenant/Components/CovenantUsers/CovenantUserTable.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "/root/nk/Github/lanscanner/exploits/Covenant/Covenant/Components/CovenantUsers/CovenantUserTable.razor"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "/root/nk/Github/lanscanner/exploits/Covenant/Covenant/Components/CovenantUsers/CovenantUserTable.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "/root/nk/Github/lanscanner/exploits/Covenant/Covenant/Components/CovenantUsers/CovenantUserTable.razor"
using Covenant.Core;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "/root/nk/Github/lanscanner/exploits/Covenant/Covenant/Components/CovenantUsers/CovenantUserTable.razor"
using Covenant.Models.Covenant;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "/root/nk/Github/lanscanner/exploits/Covenant/Covenant/Components/CovenantUsers/CovenantUserTable.razor"
using Covenant.Components.Shared;

#line default
#line hidden
#nullable disable
    public partial class CovenantUserTable : OwningComponentBase<ICovenantService>
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 48 "/root/nk/Github/lanscanner/exploits/Covenant/Covenant/Components/CovenantUsers/CovenantUserTable.razor"
       
    [Parameter]
    public IEnumerable<CovenantUser> CovenantUsers { get; set; }

    [Parameter]
    public bool IsSearchable { get; set; } = false;

    [Parameter]
    public bool IsSortable { get; set; } = true;

    [Parameter]
    public bool IsPaginated { get; set; } = false;

    [Parameter]
    public int PageLength { get; set; } = 50;

    [CascadingParameter]
    private Task<AuthenticationState> AuthenticationState { get; set; }
    private CovenantUser CurrentUser { get; set; }

    protected override async Task OnInitializedAsync()
    {
        this.CurrentUser = this.CurrentUser ?? await Service.GetCurrentUser((await AuthenticationState).User);
        Service.DisposeContext();
    }

    private IEnumerable<string> GetRoles(CovenantUser user)
    {
        try
        {
            IEnumerable<IdentityUserRole<string>> userRoles = Service.GetUserRoles().WaitResult();
            return userRoles.Where(UR => UR.UserId == user.Id)
                .Select(UR =>
                {
                    return Service.GetRole(UR.RoleId).WaitResult().Name;
                }).ToList();
        }
        catch (Exception e) when (e is ControllerNotFoundException || e is ControllerBadRequestException || e is ControllerUnauthorizedException)
        {
            return new List<string>();
        }
    }

    private bool IsRowDisplayed(CovenantUser user, string SearchTerm)
    {
        return SearchTerm == string.Empty ||
            user.UserName.Contains(SearchTerm, StringComparison.CurrentCultureIgnoreCase) ||
            string.Join(',', GetRoles(user)).Contains(SearchTerm, StringComparison.CurrentCultureIgnoreCase);
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime IJSRuntime { get; set; }
    }
}
#pragma warning restore 1591
