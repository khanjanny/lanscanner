#pragma checksum "/root/nk/Github/lanscanner/exploits/Covenant/Covenant/Components/Listeners/ListenerIndex.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "518084f6222bebd3a1809a0ebb460bc319cc5523"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace Covenant.Components.Listeners
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
#nullable restore
#line 1 "/root/nk/Github/lanscanner/exploits/Covenant/Covenant/Components/_Imports.razor"
using Microsoft.AspNetCore.Components;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/root/nk/Github/lanscanner/exploits/Covenant/Covenant/Components/_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "/root/nk/Github/lanscanner/exploits/Covenant/Covenant/Components/_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "/root/nk/Github/lanscanner/exploits/Covenant/Covenant/Components/_Imports.razor"
using Covenant.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "/root/nk/Github/lanscanner/exploits/Covenant/Covenant/Components/Listeners/ListenerIndex.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "/root/nk/Github/lanscanner/exploits/Covenant/Covenant/Components/Listeners/ListenerIndex.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "/root/nk/Github/lanscanner/exploits/Covenant/Covenant/Components/Listeners/ListenerIndex.razor"
using Covenant.Core;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "/root/nk/Github/lanscanner/exploits/Covenant/Covenant/Components/Listeners/ListenerIndex.razor"
using Covenant.Models.Listeners;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "/root/nk/Github/lanscanner/exploits/Covenant/Covenant/Components/Listeners/ListenerIndex.razor"
using Covenant.Components.Profiles;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "/root/nk/Github/lanscanner/exploits/Covenant/Covenant/Components/Listeners/ListenerIndex.razor"
           [Authorize(Roles = "User, Administrator")]

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/listener")]
    [Microsoft.AspNetCore.Components.RouteAttribute("/listener/index")]
    public partial class ListenerIndex : OwningComponentBase<ICovenantService>, IDisposable
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 56 "/root/nk/Github/lanscanner/exploits/Covenant/Covenant/Components/Listeners/ListenerIndex.razor"
       
    [Parameter]
    public List<Listener> Listeners { get; set; }

    [Parameter]
    public IEnumerable<Profile> Profiles { get; set; }

    protected override async Task OnInitializedAsync()
    {
        this.Listeners = this.Listeners ?? (await Service.GetListeners()).ToList();
        this.Profiles = this.Profiles ?? await Service.GetProfiles();
        Service.DisposeContext();
        this.INotificationService.OnCreateListener += OnCreateListener;
        this.INotificationService.OnEditListener += OnEditListener;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await IJSRuntime.InvokeAsync<string>("ShowTab", "#listeners-tab");
        }
    }

    public void Dispose()
    {
        this.INotificationService.OnCreateListener -= OnCreateListener;
        this.INotificationService.OnEditListener -= OnEditListener;
    }

    private void OnCreateListener(object sender, Listener listener)
    {
        this.Listeners.Add(Service.GetListener(listener.Id).WaitResult());
        Service.DisposeContext();
        this.InvokeAsync(() => this.StateHasChanged());
    }

    private void OnEditListener(object sender, Listener listener)
    {
        if (this.Listeners.Any(L => L.Id == listener.Id))
        {
            this.Listeners[this.Listeners.FindIndex(L => L.Id == listener.Id)] = Service.GetListener(listener.Id).WaitResult();
            Service.DisposeContext();
            this.InvokeAsync(() => this.StateHasChanged());
        }
    }

    private bool IsAdmin()
    {
        return AuthenticationStateProvider
            .GetAuthenticationStateAsync()
            .WaitResult().User
            .IsInRole("Administrator");
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private AuthenticationStateProvider AuthenticationStateProvider { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private INotificationService INotificationService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime IJSRuntime { get; set; }
    }
}
#pragma warning restore 1591
