#pragma checksum "/root/nk/Github/lanscanner/exploits/Covenant/Covenant/Components/Graph/GraphBox.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "2fc4b1efe08f1407f2b06b70a234cc2898be7fb7"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace Covenant.Components.Graph
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
#nullable restore
#line 1 "/root/nk/Github/lanscanner/exploits/Covenant/Covenant/Components/_Imports.razor"
using Microsoft.AspNetCore.Components;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/root/nk/Github/lanscanner/exploits/Covenant/Covenant/Components/_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "/root/nk/Github/lanscanner/exploits/Covenant/Covenant/Components/_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "/root/nk/Github/lanscanner/exploits/Covenant/Covenant/Components/_Imports.razor"
using Covenant.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "/root/nk/Github/lanscanner/exploits/Covenant/Covenant/Components/Graph/GraphBox.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "/root/nk/Github/lanscanner/exploits/Covenant/Covenant/Components/Graph/GraphBox.razor"
using Covenant.Core;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "/root/nk/Github/lanscanner/exploits/Covenant/Covenant/Components/Graph/GraphBox.razor"
using Covenant.Models.Grunts;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "/root/nk/Github/lanscanner/exploits/Covenant/Covenant/Components/Graph/GraphBox.razor"
using Covenant.Models.Listeners;

#line default
#line hidden
#nullable disable
    public partial class GraphBox : OwningComponentBase<ICovenantService>
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 105 "/root/nk/Github/lanscanner/exploits/Covenant/Covenant/Components/Graph/GraphBox.razor"
       
    [Parameter]
    public IEnumerable<Listener> Listeners { get; set; }

    private IEnumerable<Grunt> Grunts { get; set; }

    protected override async Task OnInitializedAsync()
    {
        this.Grunts = await Service.GetGrunts();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await IJSRuntime.InvokeAsync<string>("ShowTab", "start-tab");
            await IJSRuntime.InvokeAsync<string>("InitializeGraph", ".graph-box");
            foreach (Grunt grunt in this.Grunts.Where(G => G.Status != GruntStatus.Uninitialized))
            {
                await IJSRuntime.InvokeAsync<string>("GraphDisplayGrunt", grunt.GUID, grunt.Name);
            }
            foreach (Listener listener in this.Listeners.Where(L => L.Status == ListenerStatus.Active))
            {
                await IJSRuntime.InvokeAsync<string>("GraphDisplayListener", listener.GUID, listener.Name);
            }
            foreach (Grunt grunt in this.Grunts.Where(G => G.Status != GruntStatus.Uninitialized))
            {
                foreach (string child in grunt.Children)
                {
                    Grunt childGrunt = await Service.GetGruntByGUID(child);
                    await IJSRuntime.InvokeAsync<string>("GraphDisplayGruntLink", grunt.GUID, childGrunt.GUID);
                }
            }
            List<Grunt> grunts = this.Grunts
                    .Where(G => G.Status != GruntStatus.Uninitialized)
                    .Where(G => !this.Grunts.Any(AG => AG.Children.Contains(G.GUID)))
                    .ToList();
            foreach (Grunt grunt in grunts)
            {
                Listener listener = await Service.GetListener(grunt.ListenerId);
                await IJSRuntime.InvokeAsync<string>("GraphDisplayGruntListenerLink", listener.GUID, grunt.GUID);
            }
        }
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime IJSRuntime { get; set; }
    }
}
#pragma warning restore 1591
