#pragma checksum "/root/nk/Github/lanscanner/exploits/Covenant/Covenant/Components/Shared/EditFormList.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "c53c947591678a4ade9ca82c7676408d76c2f10d"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace Covenant.Components.Shared
{
    #line hidden
    using System;
    using System.Linq;
    using System.Threading.Tasks;
#nullable restore
#line 1 "/root/nk/Github/lanscanner/exploits/Covenant/Covenant/Components/_Imports.razor"
using Microsoft.AspNetCore.Components;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/root/nk/Github/lanscanner/exploits/Covenant/Covenant/Components/_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "/root/nk/Github/lanscanner/exploits/Covenant/Covenant/Components/_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "/root/nk/Github/lanscanner/exploits/Covenant/Covenant/Components/_Imports.razor"
using Covenant.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "/root/nk/Github/lanscanner/exploits/Covenant/Covenant/Components/Shared/EditFormList.razor"
using System.Collections.Generic;

#line default
#line hidden
#nullable disable
    public partial class EditFormList : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 26 "/root/nk/Github/lanscanner/exploits/Covenant/Covenant/Components/Shared/EditFormList.razor"
       
    [Parameter]
    public List<string> FormList { get; set; }

    [Parameter]
    public EventCallback<List<string>> FormListChanged { get; set; }

    [Parameter]
    public string InputName { get; set; }

    private async Task AddRow()
    {
        FormList.Add("");
        await this.FormListChanged.InvokeAsync(this.FormList);
    }

    private async Task RemoveRow(int row)
    {
        FormList.RemoveAt(row);
        await this.FormListChanged.InvokeAsync(this.FormList);
    }

    private async Task OnFormListItemChanged(int index, ChangeEventArgs e)
    {
        this.FormList[index] = e.Value.ToString();
        await this.FormListChanged.InvokeAsync(this.FormList);
    }

#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
